{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ahm2016/KAKIU/blob/main/DashBoard\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "id": "d09f8b61-0d67-4494-8c3a-b70818537a7a",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d09f8b61-0d67-4494-8c3a-b70818537a7a",
        "outputId": "125ecb74-b6e9-4bac-af05-b8d7608cbc57"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting dash\n",
            "  Downloading dash-3.2.0-py3-none-any.whl.metadata (10 kB)\n",
            "Collecting jupyter-dash\n",
            "  Downloading jupyter_dash-0.4.2-py3-none-any.whl.metadata (3.6 kB)\n",
            "Requirement already satisfied: plotly in /usr/local/lib/python3.12/dist-packages (5.24.1)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.12/dist-packages (2.2.2)\n",
            "Requirement already satisfied: Flask<3.2,>=1.0.4 in /usr/local/lib/python3.12/dist-packages (from dash) (3.1.2)\n",
            "Requirement already satisfied: Werkzeug<3.2 in /usr/local/lib/python3.12/dist-packages (from dash) (3.1.3)\n",
            "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.12/dist-packages (from dash) (8.7.0)\n",
            "Requirement already satisfied: typing-extensions>=4.1.1 in /usr/local/lib/python3.12/dist-packages (from dash) (4.15.0)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.12/dist-packages (from dash) (2.32.4)\n",
            "Collecting retrying (from dash)\n",
            "  Downloading retrying-1.4.2-py3-none-any.whl.metadata (5.5 kB)\n",
            "Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.12/dist-packages (from dash) (1.6.0)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.12/dist-packages (from dash) (75.2.0)\n",
            "Requirement already satisfied: ipython in /usr/local/lib/python3.12/dist-packages (from jupyter-dash) (7.34.0)\n",
            "Requirement already satisfied: ipykernel in /usr/local/lib/python3.12/dist-packages (from jupyter-dash) (6.17.1)\n",
            "Collecting ansi2html (from jupyter-dash)\n",
            "  Downloading ansi2html-1.9.2-py3-none-any.whl.metadata (3.7 kB)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.12/dist-packages (from plotly) (8.5.0)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.12/dist-packages (from plotly) (25.0)\n",
            "Requirement already satisfied: numpy>=1.26.0 in /usr/local/lib/python3.12/dist-packages (from pandas) (2.0.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.12/dist-packages (from pandas) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.12/dist-packages (from pandas) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.12/dist-packages (from pandas) (2025.2)\n",
            "Requirement already satisfied: blinker>=1.9.0 in /usr/local/lib/python3.12/dist-packages (from Flask<3.2,>=1.0.4->dash) (1.9.0)\n",
            "Requirement already satisfied: click>=8.1.3 in /usr/local/lib/python3.12/dist-packages (from Flask<3.2,>=1.0.4->dash) (8.3.0)\n",
            "Requirement already satisfied: itsdangerous>=2.2.0 in /usr/local/lib/python3.12/dist-packages (from Flask<3.2,>=1.0.4->dash) (2.2.0)\n",
            "Requirement already satisfied: jinja2>=3.1.2 in /usr/local/lib/python3.12/dist-packages (from Flask<3.2,>=1.0.4->dash) (3.1.6)\n",
            "Requirement already satisfied: markupsafe>=2.1.1 in /usr/local/lib/python3.12/dist-packages (from Flask<3.2,>=1.0.4->dash) (3.0.3)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n",
            "Requirement already satisfied: zipp>=3.20 in /usr/local/lib/python3.12/dist-packages (from importlib-metadata->dash) (3.23.0)\n",
            "Requirement already satisfied: debugpy>=1.0 in /usr/local/lib/python3.12/dist-packages (from ipykernel->jupyter-dash) (1.8.15)\n",
            "Requirement already satisfied: jupyter-client>=6.1.12 in /usr/local/lib/python3.12/dist-packages (from ipykernel->jupyter-dash) (7.4.9)\n",
            "Requirement already satisfied: matplotlib-inline>=0.1 in /usr/local/lib/python3.12/dist-packages (from ipykernel->jupyter-dash) (0.1.7)\n",
            "Requirement already satisfied: psutil in /usr/local/lib/python3.12/dist-packages (from ipykernel->jupyter-dash) (5.9.5)\n",
            "Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.12/dist-packages (from ipykernel->jupyter-dash) (26.2.1)\n",
            "Requirement already satisfied: tornado>=6.1 in /usr/local/lib/python3.12/dist-packages (from ipykernel->jupyter-dash) (6.4.2)\n",
            "Requirement already satisfied: traitlets>=5.1.0 in /usr/local/lib/python3.12/dist-packages (from ipykernel->jupyter-dash) (5.7.1)\n",
            "Collecting jedi>=0.16 (from ipython->jupyter-dash)\n",
            "  Downloading jedi-0.19.2-py2.py3-none-any.whl.metadata (22 kB)\n",
            "Requirement already satisfied: decorator in /usr/local/lib/python3.12/dist-packages (from ipython->jupyter-dash) (4.4.2)\n",
            "Requirement already satisfied: pickleshare in /usr/local/lib/python3.12/dist-packages (from ipython->jupyter-dash) (0.7.5)\n",
            "Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.12/dist-packages (from ipython->jupyter-dash) (3.0.52)\n",
            "Requirement already satisfied: pygments in /usr/local/lib/python3.12/dist-packages (from ipython->jupyter-dash) (2.19.2)\n",
            "Requirement already satisfied: backcall in /usr/local/lib/python3.12/dist-packages (from ipython->jupyter-dash) (0.2.0)\n",
            "Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.12/dist-packages (from ipython->jupyter-dash) (4.9.0)\n",
            "Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests->dash) (3.4.3)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests->dash) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests->dash) (2.5.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/dist-packages (from requests->dash) (2025.8.3)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.4 in /usr/local/lib/python3.12/dist-packages (from jedi>=0.16->ipython->jupyter-dash) (0.8.5)\n",
            "Requirement already satisfied: entrypoints in /usr/local/lib/python3.12/dist-packages (from jupyter-client>=6.1.12->ipykernel->jupyter-dash) (0.4)\n",
            "Requirement already satisfied: jupyter-core>=4.9.2 in /usr/local/lib/python3.12/dist-packages (from jupyter-client>=6.1.12->ipykernel->jupyter-dash) (5.8.1)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.12/dist-packages (from pexpect>4.3->ipython->jupyter-dash) (0.7.0)\n",
            "Requirement already satisfied: wcwidth in /usr/local/lib/python3.12/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython->jupyter-dash) (0.2.14)\n",
            "Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.12/dist-packages (from jupyter-core>=4.9.2->jupyter-client>=6.1.12->ipykernel->jupyter-dash) (4.4.0)\n",
            "Downloading dash-3.2.0-py3-none-any.whl (7.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.9/7.9 MB\u001b[0m \u001b[31m40.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading jupyter_dash-0.4.2-py3-none-any.whl (23 kB)\n",
            "Downloading ansi2html-1.9.2-py3-none-any.whl (17 kB)\n",
            "Downloading retrying-1.4.2-py3-none-any.whl (10 kB)\n",
            "Downloading jedi-0.19.2-py2.py3-none-any.whl (1.6 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m26.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: retrying, jedi, ansi2html, dash, jupyter-dash\n",
            "Successfully installed ansi2html-1.9.2 dash-3.2.0 jedi-0.19.2 jupyter-dash-0.4.2 retrying-1.4.2\n"
          ]
        }
      ],
      "source": [
        "!pip install dash jupyter-dash plotly pandas\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "id": "3f3ba347-c523-490e-a1b0-8d0bae72952b",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 671
        },
        "id": "3f3ba347-c523-490e-a1b0-8d0bae72952b",
        "outputId": "24ae0bb6-7b21-49a4-afde-c7abef320dde"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "(async (port, path, width, height, cache, element) => {\n",
              "    if (!google.colab.kernel.accessAllowed && !cache) {\n",
              "      return;\n",
              "    }\n",
              "    element.appendChild(document.createTextNode(''));\n",
              "    const url = await google.colab.kernel.proxyPort(port, {cache});\n",
              "    const iframe = document.createElement('iframe');\n",
              "    iframe.src = new URL(path, url).toString();\n",
              "    iframe.height = height;\n",
              "    iframe.width = width;\n",
              "    iframe.style.border = 0;\n",
              "    iframe.allow = [\n",
              "        'accelerometer',\n",
              "        'autoplay',\n",
              "        'camera',\n",
              "        'clipboard-read',\n",
              "        'clipboard-write',\n",
              "        'gyroscope',\n",
              "        'magnetometer',\n",
              "        'microphone',\n",
              "        'serial',\n",
              "        'usb',\n",
              "        'xr-spatial-tracking',\n",
              "    ].join('; ');\n",
              "    element.appendChild(iframe);\n",
              "  })(8050, \"/\", \"100%\", 650, false, window.element)"
            ]
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Import required libraries\n",
        "import dash\n",
        "from dash import html, dcc\n",
        "from dash.dependencies import Input, Output\n",
        "import plotly.express as px\n",
        "import pandas as pd\n",
        "\n",
        "# Initialize the Dash app\n",
        "app = dash.Dash(__name__, external_stylesheets=['https://codepen.io/chriddyp/pen/bWLwgP.css'])\n",
        "\n",
        "# Assuming spacex_df is already loaded\n",
        "# If not, you would need to load it here\n",
        "# spacex_df = pd.read_csv('spacex_launch_dash.csv')\n",
        "\n",
        "# Create app layout\n",
        "app.layout = html.Div(\n",
        "    [\n",
        "        html.H1(\n",
        "            \"SpaceX Launch Records Dashboard\",\n",
        "            style={\"textAlign\": \"center\", \"color\": \"#503D36\", \"font-size\": 40},\n",
        "        ),\n",
        "\n",
        "        # TASK 1: Add a dropdown list to enable Launch Site selection\n",
        "        html.Div(\n",
        "            [\n",
        "                html.Div(\"Select a Launch Site:\"),\n",
        "                dcc.Dropdown(\n",
        "                    id=\"site-dropdown\",\n",
        "                    options=[\n",
        "                        {\"label\": \"All Sites\", \"value\": \"ALL\"},\n",
        "                        {\"label\": \"CCAFS LC-40\", \"value\": \"CCAFS LC-40\"},\n",
        "                        {\"label\": \"VAFB SLC-4E\", \"value\": \"VAFB SLC-4E\"},\n",
        "                        {\"label\": \"KSC LC-39A\", \"value\": \"KSC LC-39A\"},\n",
        "                        {\"label\": \"CCAFS SLC-40\", \"value\": \"CCAFS SLC-40\"},\n",
        "                    ],\n",
        "                    value=\"ALL\",\n",
        "                    placeholder=\"Select a Launch Site\",\n",
        "                    searchable=True,\n",
        "                ),\n",
        "            ],\n",
        "            style={\"width\": \"80%\"},\n",
        "        ),\n",
        "\n",
        "        html.Br(),\n",
        "\n",
        "        # TASK 2: Add a pie chart to show the total successful launches count for all sites\n",
        "        # If a specific launch site was selected, show the Success vs. Failed counts for the site\n",
        "        html.Div(dcc.Graph(id=\"success-pie-chart\")),\n",
        "\n",
        "        html.Br(),\n",
        "\n",
        "        # TASK 3: Add a slider to select payload range\n",
        "        html.Div(\n",
        "            [\n",
        "                html.Div(\"Payload range (Kg):\"),\n",
        "                dcc.RangeSlider(\n",
        "                    id=\"payload-slider\",\n",
        "                    min=0,\n",
        "                    max=10000,\n",
        "                    step=1000,\n",
        "                    marks={i: str(i) for i in range(0, 10001, 1000)},\n",
        "                    value=[0, 10000],\n",
        "                    # Fixed the syntax error here - removed the trailing comma\n",
        "                    tooltip={\"placement\": \"bottom\", \"always_visible\": True}\n",
        "                ),\n",
        "            ],\n",
        "            style={\"width\": \"80%\"},\n",
        "        ),\n",
        "\n",
        "        html.Br(),\n",
        "\n",
        "        # TASK 4: Success vs Payload scatter plot\n",
        "        dcc.Graph(id=\"success-payload-scatter-chart\"),\n",
        "    ],\n",
        "    style={\"margin\": \"0 auto\", \"width\": \"95%\"},\n",
        ")\n",
        "\n",
        "# ---------- Callbacks ----------\n",
        "\n",
        "# Pie chart: if ALL, show total success count by site; otherwise success vs failure for the selected site\n",
        "@app.callback(Output(\"success-pie-chart\", \"figure\"), Input(\"site-dropdown\", \"value\"))\n",
        "def update_pie(selected_site):\n",
        "    if selected_site == \"ALL\":\n",
        "        # Sum successes by site (class=1)\n",
        "        agg = (spacex_df.groupby(\"Launch Site\")[\"class\"].sum().reset_index())\n",
        "        fig = px.pie(\n",
        "            agg, values=\"class\", names=\"Launch Site\",\n",
        "            title=\"Total Successful Launches by Site\"\n",
        "        )\n",
        "    else:\n",
        "        filtered = spacex_df[spacex_df[\"Launch Site\"] == selected_site].copy()\n",
        "        # Map class 1/0 -> Success/Failure for clearer labels\n",
        "        filtered[\"Outcome\"] = filtered[\"class\"].map({1: \"Success\", 0: \"Failure\"})\n",
        "        fig = px.pie(\n",
        "            filtered, names=\"Outcome\",\n",
        "            title=f\"Success vs. Failure for {selected_site}\"\n",
        "        )\n",
        "    return fig\n",
        "\n",
        "# Scatter: filter by payload range and optionally by site\n",
        "@app.callback(\n",
        "    Output(\"success-payload-scatter-chart\", \"figure\"),\n",
        "    [Input(\"site-dropdown\", \"value\"), Input(\"payload-slider\", \"value\")],\n",
        ")\n",
        "def update_scatter(selected_site, payload_range):\n",
        "    low, high = payload_range\n",
        "    mask = (spacex_df[\"Payload Mass (kg)\"] >= low) & (spacex_df[\"Payload Mass (kg)\"] <= high)\n",
        "    df = spacex_df.loc[mask]\n",
        "    if selected_site != \"ALL\":\n",
        "        df = df[df[\"Launch Site\"] == selected_site]\n",
        "    fig = px.scatter(\n",
        "        df,\n",
        "        x=\"Payload Mass (kg)\",\n",
        "        y=\"class\",\n",
        "        color=\"Booster Version Category\",\n",
        "        title=\"Correlation between Payload and Launch Success\",\n",
        "        hover_data=[\"Launch Site\"],\n",
        "    )\n",
        "    return fig\n",
        "\n",
        "# Run in Jupyter notebook - using the updated method for JupyterDash\n",
        "import jupyter_dash\n",
        "from jupyter_dash import JupyterDash\n",
        "\n",
        "# If using JupyterDash, replace the app initialization with:\n",
        "#app = JupyterDash(__name__, external_stylesheets=['https://codepen.io/chriddyp/pen/bWLwgP.css'])\n",
        "\n",
        "# For regular Dash in Jupyter, use this instead:\n",
        "app.run(mode=\"jupyterlab\", port=8050, debug=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "377b06d4-0509-45cf-916a-bacf3aefa6fd",
      "metadata": {
        "id": "377b06d4-0509-45cf-916a-bacf3aefa6fd"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python [conda env:base] *",
      "language": "python",
      "name": "conda-base-py"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.13.5"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}